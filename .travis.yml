language: node_js

sudo: false

# enable c++11/14 builds
addons:
  apt:
    sources: [ 'ubuntu-toolchain-r-test' ]
    packages: [ 'libstdc++-4.9-dev' ]

install:
  - node -v
  - which node
  - curl https://sh.rustup.rs -sSf | sh
  - export PATH="$HOME/.cargo/bin:$PATH"
  - source "$HOME/.cargo/env"
  - neon build "$( if [[ $BUILDTYPE == debug ]]; then echo '--debug'; fi )"

# *Here we run tests*
# We prefer running tests in the 'before_script' section rather than 'script' to ensure fast failure.
# Be aware that if you use the 'script' section it will continue running all commands in the section even if one line fails.
# This is documented at https://docs.travis-ci.com/user/customizing-the-build#Breaking-the-Build
# We don't want this behavior because otherwise we might risk publishing builds when the tests did not pass.
# For this reason, we disable the 'script' section below, since we prefer using 'before_script'.
before_script:
  - npm test

script:
  # after successful tests, publish binaries if specified in commit message
  - ./scripts/publish.sh --debug=$([ "${BUILDTYPE}" == 'debug' ] && echo "true" || echo "false")

# the matrix allows you to specify different operating systems and environments to
# run your tests and build binaries
matrix:
  include:

    ## ** Builds that are published **

    # linux publishable node v6/release
    - os: linux
      env: BUILDTYPE=release
      node_js: 6

    # linux publishable node v6/debug
    - os: linux
      env: BUILDTYPE=debug
      node_js: 6

    # osx publishable node v6/release
    - os: osx
      osx_image: xcode9.2
      env: BUILDTYPE=release
      node_js: 6

    # osx publishable node v6/debug
    - os: osx
      osx_image: xcode9.2
      env: BUILDTYPE=debug
      node_js: 6

    ## ** Builds that do not get published **

    # Coverage build
    # - os: linux
    #   env: BUILDTYPE=debug CXXFLAGS="--coverage" LDFLAGS="--coverage"
    #   node_js: 6
    #   # Overrides `script` to publish coverage data to codecov
    #   script:
    #     - export PATH=$(pwd)/mason_packages/.link/bin/:${PATH}
    #     - which llvm-cov
    #     - curl -S -f https://codecov.io/bash -o codecov
    #     - chmod +x codecov
    #     - ./codecov -x "llvm-cov gcov" -Z
